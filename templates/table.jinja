<!-- 
    Here you'll find the main exhibit: the chat application code. Feel free to look around!
-->
{% extends 'base.jinja' %}


{% block content %} 
{# USYD CODE CITATION ACKNOWLEDGEMENT
I declare that the following lines of code have been taken from the
website titled: "CSS Buttons"
Original URL
https://www.w3schools.com/css/tryit.asp?filename=trycss_buttons_animate3 #}
<style>
    nav {
        border-bottom: 1px solid black;
        overflow: auto
    }

    body {
        font-weight: bold;
        background-color: #F6F5F3;
         /* background-color: #FFFAFA; */ 
    }

    *{
        font-family: 'Courier New', monospace;
    }

    .text  {
        margin-top: 2px;
        margin-bottom: 2px;
    }

    .heading {
        font-weight: bold;
        color: #1b3a6a;
    }

    .button {
        float: left;
        clear: left;
        border: none;
        outline: none;
        color: #fff;
        display: block;
        cursor: pointer;
        font-weight: bold;
        text-align: center;
        font-size: 18px;
        padding: 15px 25px;
        margin-bottom: 30px;
        border-radius: 15px;
        background-color: #1b3a6a;
        /* background-color: #4A9D93; */
        box-shadow: 0 9px #bfbfbf;
        font-family: 'Courier New', monospace;
    }

    .button:hover {
        background-color: #E68A8C;
    }

    .button:active {
        background-color: #E68A8C;
        box-shadow: 0 5px #666;
        transform: translateY(4px);
    }

    .chat-button, .repo-button, .addfriend-button, 
    .friendrequest-button, .friendlist-button,
    .assignRole-button, .addRemoveUser-button,
    .muteUnmuteUser-button {
        margin-left: 20px;
        margin-top: 20px;
        width: 50%;
    }

    .btn {
        cursor: pointer;
        font-weight: bold;
    }

    .logout-button {
        float: left;
        margin-top: 12px;
        padding: 5px 10px;
        margin-right: 10px;
        border-radius: 8px;
        border-width: 0.5px;
        border-color: #dad8d8;
    }

    .home-button:hover, .logout-button:hover {
        background: #e7e7e7;
    }

    .bottom-nav {
        border-top: 1px solid black;
        background-color: #ededed;        
        border-bottom: none;
        position: fixed;
        overflow: auto;
        width: 100%;
        bottom: 0;
    }


    /* -- for NEW ARTICLE -- overall template -- */
    /*    USYD CODE CITATION ACKNOWLEDGEMENT
    I declare that the following lines of code have been taken from the
    websites titled: "How TO - CSS/JS Modal" 
    Original URL
    https://www.w3schools.com/howto/howto_css_modals.asp
    Last access May, 2024   */
    .modal {
        top: 0;
        left: 0;
        z-index: 1;
        width: 100%;
        height: 100%;
        display: none;
        overflow: auto;
        position: fixed;
        padding-top: 100px;
        background-color: rgb(0,0,0);
        background-color: rgba(0,0,0,0.4);
    }

    /* defined: <div class="modal-header"> */
    .modal-header {
        color: white;
        padding: 2px 16px;
        background-color: #1b3a6a;
    }

    /* defined: <div class="modal-body"> */
    .modal-body {
        padding: 2px 16px;
    }

    /* defined: <div class="modal-content"> */
    .modal-content {
        padding: 0;
        width: 80%;
        margin: auto;
        position: relative;
        border: 1px solid #888;
        background-color: #fefefe;
        box-shadow: 0 4px 8px 0 black 6px 20px 0 black;
    }

    /* defined: <span class="close"> */
    .close {
        float: right;
        color: white;
        font-size: 28px;
        font-weight: bold;
    }

    .close:hover, .close:focus {
        color: #000;
        cursor: pointer;
        text-decoration: none;
    }

    #user_to_be_muted_box {
        padding: 10px 10px;
    }

    #hidden_mute_msg, #hidden_msg, #hiddenMsg {
        color: white;
    }

</style>

<!--Navbar, you'll see the username here
<nav style="border-bottom: 1px solid black;">
    <button class="btn logout-button" onclick="to_logout()">Logout</button>
    <ol style="float: right">
        <li tabindex="0" style="display:inline-block">{{ username }} / {{ role }} </li>
    </ol>
</nav>-->
<nav style="border-bottom: 1px solid black;">
    <button class="btn logout-button" onclick="to_logout()">Logout</button>
    <ol style="float: right">
        <li tabindex="0" style="display:inline-block">
            <span id="username">{{ username }}</span> / 
            <span id="role">{{ role }}</span> 
        </li>
    </ol>
</nav>
<h1 class="heading">HOME PAGE</h1>

<main>
    {% if role == 'student' %}
        <button tabindex="0" class="button chat-button" onclick="to_chat()">Chatroom</button>
        <button tabindex="0" class="button repo-button" onclick="to_repo()">Repository</button>
        <button tabindex="0" class="button friendlist-button" onclick="to_friendlist()">Friend List</button>
        <button tabindex="0" class="button addfriend-button" onclick="to_addfriend()">Add Friend</button>
        <button tabindex="0" class="button friendrequest-button" onclick="to_friendrequest()">Friend Request</button>
    {% endif %}

    {# ADMIN -- TOP-LEVEL CONTROL #}
    {% if role == "Admin" %}
        <button tabindex="0" class="button assignRole-button" onclick="to_assignRole()">Assign Role</button>
        <button tabindex="0" class="button addRemoveUser-button" onclick="to_addRemoveUser()">Remove User</button>
        <button tabindex="0" class="button repo-button" onclick="to_repo()">Repository</button>
    {% endif %}

    {# ADMINISTRATIVE STAFF -- access for moderation #}
    {% if role == 'Administrative staff' %}
        <button tabindex="0" class="button repo-button" onclick="to_repo()">Repository</button>
        <button tabindex="0" class="button muteUnmuteUser-button" onclick="to_mute_users()">Mute / Unmute User</button>
    {% endif %}

    {# ACADEMICS #}
    {% if role == 'Academics' %}
        <button tabindex="0" class="button chat-button" onclick="to_chat()">Chatroom</button>
        <button tabindex="0" class="button repo-button" onclick="to_repo()">Repository</button>
    {% endif %}

    {% if role == 'staff' %}
        <p lang="en-GB" tabindex="0" style="color: #E68A8C;">Hi, welcome! You are currently not assigned a role. Please contact the Admin :)</p>
    {% endif %}

</main>



{% if role == 'student' or role == 'Academics' %}
    <nav class="bottom-nav"> 
        <div tabindex="0" id="notification-txt" tabindex="0"><p>Notifications</p></div>
        
        {% if notification %}
            <p lang="en-GB" tabindex="0">{{ notification }}</p>
        {% else %}
            <p lang="en-GB" tabindex="0">You have no new message.</p>
        {% endif %}
    </nav>
{% endif %}



{# MUTE USER MODAL #}
<div lang="en-GB" tabindex="0" id="mute_unmute_Modal" class="modal">
    <div lang="en-GB" tabindex="0" class="modal-content">

        <div lang="en-GB" tabindex="0" class="modal-header">
            <span class="close">&times;</span>
            <h2>Mute User</h2>
        </div>

        <div lang="en-GB" tabindex="0" class="modal-body">
            <section id="user_to_be_muted_box">
                <p lang="en-GB" tabindex="0" class="text">User to be muted: </p>
                {# input box for MUTE #}
                <input id="user_to_be_mute_unmute" style="width: 50%; height: 18px;" placeholder="username">
                {# MUTE button #}
                <button class="btn mute-button" onclick="update_DB_mute_user()">Mute</button>
                <button class="btn unmute-button" onclick="update_DB_UNmute_user()">Unmute</button>
                <p class="text" id="hidden_mute_msg">msg</p>
            </section>
        </div>
    </div>
</div>


{# ASSIGN ROLE MODAL #}
<div lang="en-GB" tabindex="0" id="assignRole_Modal" class="modal">
    <div lang="en-GB" tabindex="0" class="modal-content">

        <div lang="en-GB" tabindex="0" class="modal-header">
            <span class="close">&times;</span>
            <h2>Assign Role</h2>
        </div>

        <div lang="en-GB" tabindex="0" class="modal-body">
            <section id="assignRole_box">
                {# input box #}
                <p class="text">Username:</p>
                <input id="assigned_username" style="width: 50%; height: 18px;" placeholder="username">
                <br/>
                <br/>

                <p class="text">Role</p>
                <select id="assigned_role">
                    <option value="NA">-</option>
                    <option value="Student">Student</option>
                    <option value="Admin">Admin</option>
                    <option value="Academics">Academics</option>
                    <option value="Administrative staff">Administrative staff</option>
                </select>
                <br/>
                <br/>

                <button class="btn" onclick="update_DB_assign_role()">Assign</button>
                <p class="text" id="hidden_msg">msg</p>
            </section>
        </div>
    </div>
</div>


{# ADD / REMOVE USER MODAL #}
<div lang="en-GB" tabindex="0" id="addRemoveUser_Modal" class="modal">
    <div lang="en-GB" tabindex="0" class="modal-content">

        <div lang="en-GB" tabindex="0" class="modal-header">
            <span class="close">&times;</span>
            <h2>Remove User</h2>
        </div>

        <div lang="en-GB" tabindex="0" class="modal-body">
            <section id="addRemoveUser_box">
                <p lang="en-GB" tabindex="0" class="text">Username: </p>
                
                <input id="username_inputted" style="width: 50%; height: 18px;" placeholder="username">
                <br/>
                <br/>

                {# <button class="btn addUser-button" onclick="update_DB_add_user()">Add User</button> #}
                <button class="btn removeUser-button" onclick="update_DB_remove_user()">Remove User</button>
                <p class="text" id="hiddenMsg">msg</p>
            </section>
        </div>
    </div>
</div>


{# ----------------------------------------------------------------------------------------- #}


<script src="/static/js/libs/socket.io.min.js"></script>

<script>
    let params = new URLSearchParams(window.location.search);
    {# let username = params.get('username'); #}
    let role = params.get('role');
    let username = "{{ username }}";
    let user_id = "{{ user_id }}";
    {# let role = "{{ role }}"; #}
    let is_muted = "{{ is_muted }}";
    let user_is_muted = "{{ is_muted }}";
    Cookies.set('username', username);




    const socket = io();

    function isValidURL(string) {
        if (string.length == 0) {  return false;  }
        if (string[0] == "/") {  return true;  }
        return false;
    }

    $.ajax({
        url: "https://127.0.0.1:5000",  // replace with your server's URL
        type: "GET",
        data: {
            {# username: username, #}
            role: role
        },
        dataType: "json",
        success: function(data) {
            // Handle response from your server
            $("#username").text(data.username);
            $("#role").text(data.role);
        },
    });

// ----------------------------------------------------------------------------------------- #}


    // called from socket_routes.py >> mute_user() for parsing the msg
    socket.on("for_NONE_mute_user", (msg) => {
        let mute_msg = $("#hidden_mute_msg");
        mute_msg.text(msg);
        mute_msg.css('color', 'red');
        // close the modal in slow motion
        /*    USYD CODE CITATION ACKNOWLEDGEMENT
        I declare that the following lines of code have been taken from the
        websites titled: "setTimeout() global function" 
        Original URL
        https://developer.mozilla.org/en-US/docs/Web/API/setTimeout
        Last access May, 2024   */
        setTimeout(function(){
            $("#hidden_mute_msg").text(""); 
        }, 2000);
    })

    socket.on("for_YES_mute_user", (msg) => {
        let mute_msg = $("#hidden_mute_msg");
        mute_msg.text(msg);
        mute_msg.css('color', 'green');
        // close the modal in slow motion
        /*    USYD CODE CITATION ACKNOWLEDGEMENT
        I declare that the following lines of code have been taken from the
        websites titled: "setTimeout() global function" 
        Original URL
        https://developer.mozilla.org/en-US/docs/Web/API/setTimeout
        Last access May, 2024   */
        setTimeout(function(){
            $("#mute_unmute_Modal").hide(); 
            $("#hidden_mute_msg").text(""); 
        }, 2000);
    })

    // called from "Mute Users" button >> open modal
    function to_mute_users() {
        var modal = document.getElementById("mute_unmute_Modal");
        var span = modal.querySelector(".close");

        modal.style.display = "block";
        span.addEventListener('click', function() {
            modal.style.display = "none";
        });
        
        window.onclick = function(event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }
    }

    // called MODAL's "Mute" button >> DB
    function update_DB_mute_user() {
        let username = "{{ username }}";
        let mute_unmute_value = $("#user_to_be_mute_unmute").val();
        var modal = document.getElementById("mute_unmute_Modal");

        if (mute_unmute_value.trim() === "") {
            alert("Empty input.")
        } else {
            // parse to socket_routes.py for db commit
            socket.emit("mute_user", mute_unmute_value);
            {# $("#mute_unmute_Modal").hide(); #}
            $("#user_to_be_mute_unmute").val(""); 
        }
    }

    // called MODAL's "Unmute" button >> DB
    function update_DB_UNmute_user() {
        let username = "{{ username }}";
        let mute_unmute_value = $("#user_to_be_mute_unmute").val();
        var modal = document.getElementById("mute_unmute_Modal");

        if (mute_unmute_value.trim() === "") {
            alert("Empty input.")
        } else {
            // parse to socket_routes.py for db commit
            socket.emit("unmute_user", mute_unmute_value);
            {# $("#mute_unmute_Modal").hide(); #}
            $("#user_to_be_mute_unmute").val(""); 
        }
    }


// ----------------------------------------------------------------------------------------- #}


    // called from "Assign Role" button >> open modal
    function to_assignRole() {
        var modal = document.getElementById("assignRole_Modal");
        var span = modal.querySelector(".close");

        modal.style.display = "block";
        span.addEventListener('click', function() {
            modal.style.display = "none";
        });
        
        window.onclick = function(event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }
    }

    // called MODAL's "Assign" button >> DB
    function update_DB_assign_role() {
        let username = "{{ username }}";
        let assigned_username = $("#assigned_username").val();
        let assigned_role = $("#assigned_role").val();
        var modal = document.getElementById("assignRole_Modal");

        if (assigned_username.trim() === "" || assigned_role.trim() === "NA") {
            alert("Empty input.")
        } else {
            console.log(assigned_username + " " + assigned_role);
            // parse to socket_routes.py for db commit
            socket.emit("assign_role", assigned_username, assigned_role);
        }
    }

    socket.on("for_invalid_username", (msg) => {
        let hidden_msg = $("#hidden_msg");
        hidden_msg.text(msg);
        hidden_msg.css('color', 'red');
        // close the modal in slow motion
        /*    USYD CODE CITATION ACKNOWLEDGEMENT
        I declare that the following lines of code have been taken from the
        websites titled: "setTimeout() global function" 
        Original URL
        https://developer.mozilla.org/en-US/docs/Web/API/setTimeout
        Last access May, 2024   */
        setTimeout(function(){
            $("#hidden_msg").text(""); 
        }, 2000);
    })

    socket.on("for_valid_username", (msg) => {
        let hidden_msg = $("#hidden_msg");
        hidden_msg.text(msg);
        hidden_msg.css('color', 'green');
        // close the modal in slow motion
        /*    USYD CODE CITATION ACKNOWLEDGEMENT
        I declare that the following lines of code have been taken from the
        websites titled: "setTimeout() global function" 
        Original URL
        https://developer.mozilla.org/en-US/docs/Web/API/setTimeout
        Last access May, 2024   */
        setTimeout(function(){
            $("#assignRole_Modal").hide();
            $("#assigned_username").val(""); 
            $("#assigned_role").val("NA");
            $("#hidden_msg").text(""); 
        }, 2000);
    })


// ----------------------------------------------------------------------------------------- #}


    // called from "Add / Remove User" button >> open modal
    function to_addRemoveUser() {
        var modal = document.getElementById("addRemoveUser_Modal");
        var span = modal.querySelector(".close");

        modal.style.display = "block";
        span.addEventListener('click', function() {
            modal.style.display = "none";
        });
        
        window.onclick = function(event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }
    }

    // called MODAL's "Add User" button >> DB
    function update_DB_add_user() {
        let username_inputted = $("#username_inputted").val();
        var modal = document.getElementById("addRemoveUser_Modal");

        if (username_inputted.trim() === "") {
            alert("Please specify the username.")
        } else {
            // parse to socket_routes.py for db commit
            socket.emit("add_user", username_inputted);
        }
    }

    // called MODAL's "Remove User" button >> DB
    function update_DB_remove_user() {
        let username_inputted = $("#username_inputted").val();
        var modal = document.getElementById("addRemoveUser_Modal");

        if (username_inputted.trim() === "") {
            alert("Please specify the username.")
        } else {
            // parse to socket_routes.py for db commit
            if (confirm('Confirm to delete this user?')) {
                socket.emit("remove_user", username_inputted);
            }
        }
    }

    socket.on("invalid_username", (msg) => {
        console.log("invalid_username" + msg);
        let hiddenMsg = $("#hiddenMsg");
        hiddenMsg.text(msg);
        hiddenMsg.css('color', 'red');
        // close the modal in slow motion
        /*    USYD CODE CITATION ACKNOWLEDGEMENT
        I declare that the following lines of code have been taken from the
        websites titled: "setTimeout() global function" 
        Original URL
        https://developer.mozilla.org/en-US/docs/Web/API/setTimeout
        Last access May, 2024   */
        setTimeout(function(){
            $("#hiddenMsg").text(""); 
        }, 2000);
    })

    socket.on("valid_username", (msg) => {
        let hiddenMsg = $("#hiddenMsg");
        hiddenMsg.text(msg);
        hiddenMsg.css('color', 'green');
        // close the modal in slow motion
        /*    USYD CODE CITATION ACKNOWLEDGEMENT
        I declare that the following lines of code have been taken from the
        websites titled: "setTimeout() global function" 
        Original URL
        https://developer.mozilla.org/en-US/docs/Web/API/setTimeout
        Last access May, 2024   */
        setTimeout(function(){
            $("#addRemoveUser_Modal").hide();
            $("#username_inputted").val(""); 
            $("#hiddenMsg").text(""); 
        }, 2000);
    })


























    async function to_logout() {
        let logoutURL = "{{ url_for('logout', username=username) }}";
        window.location.href = logoutURL;
    } 

    async function to_chat() {
        let homeURL = "{{ url_for('homepage', username=username, user_id=user_id, role=role, is_muted=is_muted) }}";
        window.location.href = homeURL;
    }   

    async function to_repo() {
        let repoURL = "{{ url_for('repo', username=username, user_id=user_id, role=role, is_muted=is_muted) }}";
        window.location.href = repoURL;
    }   

    async function to_addfriend() {      // url - app.py function name
        let addfriendURL = "{{ url_for('add_friend', username=username, user_id=user_id, role=role, is_muted=is_muted) }}";
        window.location.href = addfriendURL;
    }  

    async function to_friendrequest() {
        let friendrequestURL = "{{ url_for('display_friendrequest', username=username, user_id=user_id, role=role, is_muted=is_muted) }}";
        window.location.href = friendrequestURL;
    }  

    async function to_friendlist() {
        let friendlistURL = "{{ url_for('display_friendlist', username=username, user_id=user_id, role=role, is_muted=is_muted) }}";
        window.location.href = friendlistURL;
    }  

</script>
{% endblock %}