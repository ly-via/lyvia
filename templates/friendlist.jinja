<!-- 
Display friend list page
-->
{% extends 'base.jinja' %}


{% block content %} 
   <style>
    nav {
        border-bottom: 1px solid black;
        overflow: auto
    }

    body {
        font-weight: bold;
        background-color: #F6F5F3;
    }

    *{
        font-family: 'Courier New', monospace;
    }

    .heading {
        font-weight: bold;
        color: #1b3a6a;
    }

    .text  {
        margin-top: 2px;
        margin-bottom: 2px;
    }

    .chat-button, .remove-button {
        margin-top: 20px;
    }

    .btn {
        cursor: pointer;
        font-weight: bold;
    }

    .home-button, .logout-button {
        float: left;
        margin-top: 12px;
        padding: 5px 10px;
        margin-right: 10px;
        border-radius: 8px;
        border-width: 0.5px;
        border-color: #dad8d8;
    }

    .home-button:hover, .logout-button:hover {
        background: #e7e7e7;
    }

    .button {
        color: white;
        cursor: pointer;
        font-weight: bold;
        padding: 5px 20px;
        margin-right: 10px;
        border-radius: 8px;
        border-width: 0.5px;
        background: #1b3a6a;
    }

    .button:hover {
        background: #E68A8C;
    }

</style>


<!--Navbar, you'll see the username here-->
<nav style="border-bottom: 1px solid black;">
    <button class="btn home-button" onclick="to_homepage()">Home</button>
    <button class="btn logout-button" onclick="to_logout()">Logout</button>
    <ol style="float: right">
        <li style="display:inline-block">{{ username }} / {{ role }} </li>
    </ol>
</nav>

<h1 class="heading">Friends List</h1>

    <!-- the main url affecting all the variables parsed even after alerts prompted -->
    <form id="friendlist-checkbox-form" action="{{ url_for('display_friendlist', username=username, role=role) }}" method="POST">
        <input type="hidden" id="action" name="action" value="">
        <input type="hidden" id="role" name="role" value="{{ role }}">
        <input type="hidden" id="friend_removed" name="friend_removed">
        <input type="hidden" id="username" name="username" value="{{ username }}">
        <input type="hidden" id="offline_friends" name="offline_friends" value="">
        <input type="hidden" id="online_friends" name="online_friends" value="">
        <input type="hidden" id="selected_friends" name="selected_friends" value="">
        
        <!-- print all the friends the user friend with -->
        {% if friend_usernames %}
            {% for friend_username in friend_list %}
                <input type="checkbox" id="{{ friend_username }}" name="friend_usernames" value="{{ friend_username }}">

                {# USYD CODE CITATION ACKNOWLEDGEMENT
                I declare that the following lines of code have been taken from the
                website titled: "How to show users online or offline in real time using flask and socket io even user close the browser without logout?"
                Original URL
                https://github.com/miguelgrinberg/Flask-SocketIO/issues/1443 #}

                <!-- show their corresping names, roles, online/offline -->
                <label lang="en-GB" tabindex="0" for="{{ friend_username.friend_name }}">{{ friend_username.friend_name }} - {{ friend_username.the_role }}

                    <!-- print online status for each friend parsed from app.py -->
                    {# {% if friend_status[friend_username] == True %}  #}
                    {% if friend_username.is_online == True %}
                        
                        {# USYD CODE CITATION ACKNOWLEDGEMENT
                        I declare that the following lines of code have been taken from the
                        website titled: "HTML <span> Tag"
                        Original URL
                        https://www.w3schools.com/tags/tag_span.asp #}
                        <span style="color: green;">(Online)</span>
                    {% else %} 
                        <span style="color: grey;">(Offline)</span>
                    {% endif %}
                </label><br>
            {% endfor %}
            
             {% if delete_message %}
                <p lang="en-GB" tabindex="0" style="color: #18605D;">{{ delete_message }}</p>
             {% endif %}

            <button class="button chat-button" onclick="start_chatting()">Chat</button>
            <button class="button remove-button" onclick="remove_friend()">Remove</button>
        
        {% elif another_friend_usernames %}
            {% for friend_username in friend_list %}
                <input type="checkbox" id="{{ friend_username }}" name="friend_usernames" value="{{ friend_username }}">
                {# <input type="checkbox" id="{{ friend_username }}" name="friend_usernames" value="{{ {'friend_name': friend_username, 'the_role': the_role, 'is_online': friend_status[friends]}  }}"> #}

                {# USYD CODE CITATION ACKNOWLEDGEMENT
                I declare that the following lines of code have been taken from the
                website titled: "How to show users online or offline in real time using flask and socket io even user close the browser without logout?"
                Original URL
                https://github.com/miguelgrinberg/Flask-SocketIO/issues/1443 #}

                <label for="{{ friend_username.friend_name }}">{{ friend_username.friend_name }} - {{ friend_username.the_role }}
                    

                    {# print online status for each friend parsed from app.py #}
                    {# {% if friend_status[friend_username] == True %}  #}
                    {% if friend_username.is_online == True %}
                        {# USYD CODE CITATION ACKNOWLEDGEMENT
                        I declare that the following lines of code have been taken from the
                        website titled: "HTML <span> Tag"
                        Original URL
                        https://www.w3schools.com/tags/tag_span.asp #}
                        <span style="color: green;">(Online)</span>
                    {% else %} 
                        <span style="color: grey;">(Offline)</span>
                    {% endif %}
                </label><br>
            {% endfor %}

             {% if delete_message %}
                <p lang="en-GB" tabindex="0" style="color: green;">{{ delete_message }}</p>
             {% endif %}

            <button class="button chat-button" onclick="start_chatting()">Chat</button>
            <button class="button remove-button" onclick="remove_friend()">Remove</button>
        {% endif %}

        <!-- no friend to show -->
        {% if not another_friend_usernames and not friend_usernames %}
            <p lang="en-GB" tabindex="0" >Oh no! Nothing to show here, try adding some friends :)</p>
        {% endif %}

        {% if is_muted == 'true' %}
            <p lang="en-GB" tabindex="0" style="color: red;">You are being muted, not allowed to join chat room!</p>
        {% endif %}
    </form>

    <script>
        let is_muted = "{{ is_muted }}";

        // not allowed to join chat room when muted
        if (is_muted == 'true') {
            var chat_button = document.querySelector('.chat-button');
            chat_button.setAttribute('disabled', '');
            {# setTimeout(function(){
                alert("You are being muted, not allowed to join chat room!");
            }, 800); #}
        } 

        function isValidURL(string) {
            if (string.length == 0) {  return false;  }
            if (string[0] == "/") {  return true;  }
            return false;
        }

        async function to_logout() {
            let logoutURL = "{{ url_for('logout', username=username) }}";
            window.location.href = logoutURL;
        } 

        async function to_homepage() {
            let is_muted = "{{ is_muted }}";
            let user_id = "{{ user_id }}";
            let homebuttonsURL = "{{ url_for('table', username=username, user_id=user_id, role=role, is_muted=is_muted) }}";
            window.location.href = homebuttonsURL;
        }   

        function remove_friend() {
            var checkbox = document.querySelectorAll('input[type="checkbox"]:checked');

            if (checkbox.length > 0) {

                let friend_removed = [];
                for (var i = 0; i < checkbox.length; i++) {
                    {# var friend_username = checkbox[i].value;
                    friend_removed.push(friend_username); #}

                    // replace single quotation to double quotation
                    /*    USYD CODE CITATION ACKNOWLEDGEMENT
                    I declare that the following lines of code have been taken from the
                    websites titled: "Unable to display Json Response in input checkbox tag" 
                    Original URL
                    https://stackoverflow.com/questions/41312234/unable-to-display-json-response-in-input-checkbox-tag
                    Last access May, 2024   */
                    var friend = checkbox[i].value;
                    friend_removed.push(friend);     // add all the selected friends to be removed in ls
                }
                if (friend_removed) {
                    // document.getElementById("friend_removed").value = friend_removed; #}
                    // window.location.href = "{{ url_for('display_friendlist', username=username, friend_removed=friend_removed) }}"; #}
                    document.getElementById("action").value = "remove";
                    document.getElementById("role").value = "{{ role }}";
                    document.getElementById("username").value = "{{ username }}";
                    document.getElementById("friend_removed").value = friend_removed.toString(); // convert to string for Flask
                    document.getElementById("friendlist-checkbox-form").submit();
                }

                {# document.getElementById("friendlist-checkbox-form").submit();
                let friendlistURL = `/friendlist?username={{ username }}&role={{ role }}&friend_removed={friend_removed.toString()}`;
                window.location.href = friendlistURL; #}

            } else {
                alert("Error: Select at least one friend to remove.");
            }
        }




        function start_chatting() {
            let friendlistURL = "{{ url_for('display_friendlist', username=username, role=role) }}";
            window.location.href = friendlistURL; 

            // USYD CODE CITATION ACKNOWLEDGEMENT
            // I declare that the following lines of code have been taken from the
            // website titled: "How to get all checked checkboxes"
            // Original URL
            // https://stackoverflow.com/questions/8563240/how-to-get-all-checked-checkboxes
            var checkbox = document.querySelectorAll('input[type="checkbox"]:checked');

            // convert friend_status dict to JSON obj for JavaScript to access
            // USYD CODE CITATION ACKNOWLEDGEMENT
            // I declare that the following lines of code have been taken from the
            // website titled: "i cant pass data from python flask api to javascript by tojson"
            // Original URL
            // https://stackoverflow.com/questions/74583764/i-cant-pass-data-from-python-flask-api-to-javascript-by-tojson
            var friend_status = {{ friend_status | tojson }};

            if (checkbox.length > 0) { // at least one checkbox is checked
                let offline_friends = [];
                let online_friends = [];
                let selected_friends = [];

                for (var i = 0; i < checkbox.length; i++) {
                    // get the friend username from checkbox
                    var checked_friend = checkbox[i].value; 
                    checked_friend = checked_friend.replace(/'/g, '\"');
                    checked_friend = checked_friend.replace(/True/g, 'true');
                    checked_friend = checked_friend.replace(/False/g, 'false');
                    var friend_object = JSON.parse(checked_friend);

                    // if the checked friend is "offline", put into offline_friends[]
                    if (!friend_status[friend_object.friend_name]) {
                        selected_friends.push(friend_object.friend_name);
                    } 
                    if (friend_status[friend_object.friend_name]) {
                        selected_friends.push(friend_object.friend_name);
                        {# alert("onlineeeeee " + online_friends); #}
                    }
                }

                // USYD CODE CITATION ACKNOWLEDGEMENT
                // I declare that the following lines of code have been taken from the
                // website titled: "Check if an array is empty or not in JavaScript"
                // Original URL
                // hhttps://www.geeksforgeeks.org/check-if-an-array-is-empty-or-not-in-javascript/
                if (online_friends || online_friends) { 
                    document.getElementById("action").value = "chat";
                    document.getElementById("username").value = "{{ username }}";
                    document.getElementById("selected_friends").value = selected_friends;

                    {# document.getElementById("online_friends").value = online_friends;
                    document.getElementById("offline_friends").value = offline_friends; #}
                    {# online_friend.value = online_friend_val; #}
                    {# alert("cehck online friend " + online_friends); #}

                    {# alert("cehck offline friend " + selected_friends); #}

                    action.value = "chat";
                    document.getElementById("friendlist-checkbox-form").submit();

                    {# let homeURL = `/home?username={{ username }}&role={{ role }}&online_friends=${online_friends}&offline_friend=${offline_friends}`; #}
                    let homeURL = `/home?username={{ username }}&role={{ role }}&selected_friends=${selected_friends}}`;
                    window.location.href = homeURL;
                }
            } else {
                alert("Error: Select at least one friend to chat.");
            }
        }
    </script>
{% endblock %}