<!-- 
    Here you'll find the main exhibit: the chat application code. Feel free to look around!
-->
{% extends 'base.jinja' %}


{% block content %} 
   <style>
    nav {
        border-bottom: 1px solid black;
        overflow: auto
    }

    #message_box {
        border: 1px solid black; 
        height: 400px; 
        width: 800px; 
        overflow: auto;
        padding: 2px;
    }

    .text  {
        margin-top: 2px;
        margin-bottom: 2px;
    }

    .home-button {
        float: left;
        margin-top: 15px;
        margin-right: 10px;
    }

    .addfriend-button {
        float: left;
        margin-top: 15px;
        margin-right: 10px;
    }

    .friendrequest-button {
        float: left;
        margin-top: 15px;
        margin-right: 10px;
    }

    .friendlist-button {
        float: left;
        margin-top: 15px;
        margin-right: 10px;
    }

</style>

<!--Navbar, you'll see the username here-->
<nav style="border-bottom: 1px solid black;">
    <button class="home-button" onclick="to_homepage()">Home</button>
    <button class="addfriend-button" onclick="to_addfriend()">Add Friend</button>
    <button class="friendrequest-button" onclick="to_friendrequest()">Friend Request</button>
    <button class="friendlist-button" onclick="to_friendlist()">Friend List</button>
    <ol style="float: right">
        <li style="display:inline-block">Username:  {{ username }} </li>
    </ol>
</nav>

<h1>Messaging App </h1>

<main>
    <!-- The messages are displayed here -->
    <section id="message_box"></section>

    <section id="chat_box">
        <p class="text">Chat with: </p>
        <input id="receiver" placeholder="username">
        <button onclick="join_room()">Chat</button>
    </section>

    <section id="input_box" style="display: none" >
        <p class="text">Message: </p>
        <input id="message" placeholder="message">
        <button onclick="send()">Send</button>
        <button onclick="leave()">Leave Room</button>
    </section>

    {% if online_friend %}
        <p style="color: green;">You are in chat room with "{{ online_friend }}"</p>
    {% else %}
        <p style="color: red;">Select an online friend to chat with :)</p>
    {% endif %}

</main>
<script src="/static/js/libs/socket.io.min.js"></script>
{# <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js"></script> #}
<script>
    let room_id = 0;

    $("#message").on("keyup", (e) => {
        if (e.key == "Enter") {
            send();
        }
    })

     {# $("#receiver").on("keyup", (e) => {
        if (e.key == "Enter") {
            join_room();
        }
    }) #}

    $(document).ready(() => {
        // room_id is undefined if the user hasn't joined a room
        // we early return in this case
        if (Cookies.get("room_id") == undefined) {
            return;
        }

        // the user has already joined an existing room
        // we'll display the message box, instead of the "Chat with: " box
        $("#chat_box").hide();
        $("#input_box").show();
        room_id = parseInt(Cookies.get("room_id"));

        // -- get online friend and replace receiver value with it --
        let online_friend = "{{ online_friend }}";
        {# alert("Testing online_friend: " + online_friend); #}
 
        if (online_friend) {
            $("#receiver").val(online_friend);
            {# alert("Testing receiverrrrrrrrr: " + $("#receiver").val()); #}
            send(online_friend);
            join_room(online_friend);
        }
        // -- added ^ --
    })
    
    // Here's the Socket IO part of the code
    // things get a bit complicated here so brace yourselves :P
    let username = "{{ username }}";
    Cookies.set('username', username);

    // initializes the socket
    const socket = io();

    // an incoming message arrives, we'll add the message to the message box
    socket.on("incoming", (msg, color="black") => {
        add_message(msg, color);
    })

    // we'll send the message to the server by emitting a "send" event
    function send() {
        let username = "{{ username }}";
        let message = $("#message").val();
        $("#message").val("");
        let receiver = "{{ online_friend }}";
        socket.emit("send", username, receiver, message, room_id);  
    }

    // we emit a join room event to the server to join a room
    function join_room() {
        let receiver = "{{ online_friend }}";
        {# console.log("Room joined for receiver: " + receiver); #}

        // pass in the receiver of our message to the server
        // as well as the current user's username
        socket.emit("join", username, receiver, (res) => {
            if (typeof res != "number") {
                alert(res);
                return;
            }
            // set the room id variable to the room id returned by the server
            room_id = res;
            Cookies.set("room_id", room_id);

            // now we'll show the input box, so the user can input their message
            $("#chat_box").hide();
            $("#input_box").show();

            socket.emit("enter_chatroom", room_id, username, receiver);
        });
    }


    // function when the user clicks on "Leave Room"
    // emits a "leave" event, telling the server that we want to leave the room
    function leave() {
        Cookies.remove("room_id");
        socket.emit("leave", username, room_id);
        $("#input_box").hide();
        $("#chat_box").show();
    }

    // function to add a message to the message box
    // called when an incoming message has reached a client
    function add_message(message, color) {
        let box = $("#message_box");
        let child = $(`<p style="color:${color}; margin: 0px;"></p>`).text(message);
        box.append(child);
    }


    // BUTTONS - link to app.py functions
    async function to_homepage() {      // url - app.py function name
        let homebuttonsURL = "{{ url_for('table', username=username) }}";
        window.location.href = homebuttonsURL;
    } 

    async function to_addfriend() { 
        let addfriendURL = "{{ url_for('add_friend', username=username) }}";
        window.location.href = addfriendURL;
    }  

    async function to_friendrequest() {
        let friendrequestURL = "{{ url_for('display_friendrequest', username=username) }}";
        window.location.href = friendrequestURL;
    }  

    async function to_friendlist() {
        let friendlistURL = "{{ url_for('display_friendlist', username=username) }}";
        window.location.href = friendlistURL;
    }  
</script>
{% endblock %}